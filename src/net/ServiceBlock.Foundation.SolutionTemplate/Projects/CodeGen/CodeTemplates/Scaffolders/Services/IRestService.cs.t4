<#@ Template Language="C#" HostSpecific="True"  #>
<#@ Output Extension="gen.cs" #>
<#@ include file="..\..\..\Includes\ConfigurationAccessor.tt" #>
using System.ServiceModel;
using Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF;
using VHA.ServiceFoundation;
using VHA.ServiceFoundation.ExceptionManagement;
using System.ServiceModel.Web;
using <#=Model.MessagesNamespace#>.<#=Model.EntityName#>;

namespace <#=Model.ServiceNamespace#>
{
    [ServiceContract]
    [ExceptionShielding("WCF Exception Shielding")]
    public partial interface IRest<#=Model.EntityName#>Service
    {
        [OperationContract]
        [WebGet(BodyStyle = WebMessageBodyStyle.Bare, UriTemplate = "/", ResponseFormat = WebMessageFormat.Json, RequestFormat = WebMessageFormat.Json)]
        <#=Model.EntityName#>GetAllResponse GetAll();

        [OperationContract]
        [WebGet(BodyStyle = WebMessageBodyStyle.Bare,
            UriTemplate =
                "/?Criteria&pageNumber={pageNumber}&pageSize={pageSize}&filterFieldName={filterFieldName}&filterFieldValue={filterFieldValue}&sortFieldName={sortFieldName}&sortDirection={sortDirection}"
            , ResponseFormat = WebMessageFormat.Json, RequestFormat = WebMessageFormat.Json)]
        <#=Model.EntityName#>GetWithCriteriaResponse GetWithCriteria(
            int pageNumber,
            int pageSize,
            string filterFieldName,
            string filterFieldValue,
            string sortFieldName,
            string sortDirection);
        
        [OperationContract]
        [WebGet(BodyStyle = WebMessageBodyStyle.Bare, UriTemplate = "/{id}", ResponseFormat = WebMessageFormat.Json, RequestFormat = WebMessageFormat.Json)]
        <#=Model.EntityName#>GetByIdResponse GetById(string id);

        [OperationContract]
        [WebInvoke(Method = "PUT", BodyStyle = WebMessageBodyStyle.Bare, UriTemplate = "/", ResponseFormat = WebMessageFormat.Json, RequestFormat = WebMessageFormat.Json)]
        <#=Model.EntityName#>AddOrUpdateResponse Add(<#=Model.EntityName#>AddOrUpdateRequest request);

                [OperationContract]
        [WebInvoke(Method = "POST", BodyStyle = WebMessageBodyStyle.Bare, UriTemplate = "/", ResponseFormat = WebMessageFormat.Json, RequestFormat = WebMessageFormat.Json)]
        <#=Model.EntityName#>AddOrUpdateResponse Update(<#=Model.EntityName#>AddOrUpdateRequest request);

        [OperationContract]
        [WebInvoke(Method = "DELETE", BodyStyle = WebMessageBodyStyle.Bare, UriTemplate = "/", ResponseFormat = WebMessageFormat.Json, RequestFormat = WebMessageFormat.Json)]
        <#=Model.EntityName#>DeleteResponse Delete(<#=Model.EntityName#>DeleteRequest request);
    }
}
