<#@ Template Language="C#" HostSpecific="True"  #>
<#@ Output Extension="cs" #>
<#@ include file="..\..\..\Includes\ConfigurationAccessor.tt" #>
using System;
using System.Activities;
using System.Collections.Generic;
using System.Linq;
using System.ServiceModel;
using System.Text;
using System.Threading.Tasks;
using VHA.ServiceFoundation;
using VHA.ServiceFoundation.Activities;
using <#=Model.EntityNamespace#>;

namespace <#=Model.Namespace#>.<#=Model.EntityName#>
{
    public sealed class GetById : DataActivityBase<<#=Model.EntityNamespace#>.<#=Model.EntityName#>>
    {
        [RequiredArgument]
        public InArgument<int> Id { get; set; }

        public InArgument<string> IncludeProperties { get; set; }

        protected override void Execute(NativeActivityContext context)
        {
            var dataContext = base.GetUnitOfWork<<#=Model.UoWInterfaceName#>>(context);

            var id = Id.Get(context);
            var includProperties = IncludeProperties.Get(context);

            var toReturn = dataContext.<#=Model.EntityNamePlural#>
                .IncludePropertyListCsv(includProperties)
                .SingleOrDefault(x => x.<#=Model.PrimaryKey#> == id);
            
            Result.Set(context, toReturn);
        }
    }
}
